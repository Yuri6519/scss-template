@import "vars.scss";

/*
  1. font-XXX() - установка шрифта (font-family)
  2. set-font() - установка шрифта (size...)
  3. set-flex() - flex
  4. set-grid() - grid
  5. set-center-X() - margin 0 auto;
  6. pos-center-y() - translateY(-50%)
  7. pos-center-x() - translateX(-50%)
  8. set-absolute() - установка в position = absolute
  9. set-pseudo-absolute() - установка before or after в position = absolute
  10. hover-ops($opacity: 0.7, $delay: 0.2s) - hover - opacity
  11. set-button-close() - рисует кнопку close -> Х




*/

// @mixin font-roboto() {
//   font-family: $font-roboto;
// }

// @mixin font-roboto-cond() {
//   font-family: $font-roboto-cond;
// }

@mixin set-font($size: $size-def, $weight: $weight-def, $line: $line-def, $color: $color-def) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line;
  color: $color;
  //letter-#{$name}: 1.5em;
}

@mixin set-flex($jst: flex-start, $align: stretch, $wrap: wrap) {
  display: flex;
  justify-content: $jst;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin set-grid($col, $fr: 1fr) {
  display: grid;
  grid-template-columns: repeat($col, $fr);
}

@mixin set-center-X() {
  margin: 0 auto;
}

@mixin pos-center-y() {
  transform: translateY(-50%);
}

@mixin pos-center-x() {
  transform: translateX(-50%);
}

@mixin set-absolute(
  $top: auto,
  $left: auto,
  $bottom: auto,
  $right: auto,
  $width: auto,
  $height: auto,
  $bgc: transparent
) {
  position: absolute;
  display: block;
  top: $top;
  left: $left;
  bottom: $bottom;
  right: $right;
  width: $width;
  height: $height;
  background-color: $bgc;

  @if $top == center {
    top: 50%;
    @include pos-center-y();
  }
  @if $left == center {
    left: 50%;
    @include pos-center-x();
  }
}

@mixin set-pseudo-absolute(
  $element,
  $top: auto,
  $left: auto,
  $bottom: auto,
  $right: auto,
  $width: auto,
  $height: auto,
  $bgc: transparent
) {
  @if $element == before {
    &::before {
      content: "";
      @include set-absolute($top, $left, $bottom, $right, $width, $height, $bgc);
    }
  } @else if $element == after {
    &::after {
      content: "";
      @include set-absolute($top, $left, $bottom, $right, $width, $height, $bgc);
    }
  }
}

@mixin hover-ops($opacity: 0.7, $delay: 0.2s) {
  transition: all $delay ease;
  &:hover {
    opacity: $opacity;
  }
}

@mixin set-button-close(
  $top: auto,
  $left: auto,
  $bottom: auto,
  $right: auto,
  $width: auto,
  $height: auto,
  $elm-wth: 100%,
  $elm-ht: 1px,
  $elm-cl: $color-black-1
) {
  @include set-absolute($top, $left, $bottom, $right, $width, $height);

  @include set-pseudo-absolute(before, 50%, $width: $elm-wth, $height: $elm-ht, $bgc: $elm-cl);
  @include set-pseudo-absolute(after, 50%, $width: $elm-wth, $height: $elm-ht, $bgc: $elm-cl);

  &:before {
    transform: translateY(-50%) rotate(45deg);
  }
  &:after {
    transform: translateY(-50%) rotate(-45deg);
  }
}
